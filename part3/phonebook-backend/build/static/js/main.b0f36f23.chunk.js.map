{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Person","person","handleDeleteClick","name","number","onClick","Persons","persons","handlePersonDelete","map","key","id","event","Filter","props","value","onChange","onchange","PersonForm","onnamechange","onnumberchange","type","onsubmit","axios","get","then","response","data","newPerson","post","delete","console","log","Notification","message","style","padding","background","border","borderRadius","color","borderColor","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterText","setFilterText","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personService","hideNotification","personsToShow","filter","b","toLowerCase","includes","target","preventDefault","find","i","alert","concat","setTimeout","personToDelete","window","confirm","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0f36f23.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, handleDeleteClick}) => {\n  return (\n    <div>\n      <p>{person.name} {person.number} <button person={person} onClick={handleDeleteClick}>delete</button></p>\n    </div>\n  )\n}\n\nconst Persons = ({persons, handlePersonDelete}) => {\n  return (\n    <div>\n      {persons.map(person => <Person key={person.id} person={person} handleDeleteClick={event => handlePersonDelete(person)}/>)}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with\n      <input value={props.value} onChange={props.onchange} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = (props) => {\n  return (\n    <form>\n      <div>\n        name: <input value={props.name} onChange={props.onnamechange} />\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.onnumberchange} />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={props.onsubmit}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst addPerson = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => {\n    console.log(response)\n    return response.data\n  })\n}\n\nexport default {getAll, addPerson, deletePerson}","import React from 'react'\n\nconst Notification = ({message, type}) => {\n  const style = {\n    padding: 10,\n    background: 'lightgrey',\n    border: '2px solid transparent',\n    borderRadius: '5px'\n  }\n  console.log('notification type', type)\n  if (type === 'alert') {\n    style.color = 'red';\n    style.borderColor = 'red';\n  } else if (type === 'success') {\n    style.color = 'green';\n    style.borderColor = 'green';\n  }\n  \n  if (message === null) {\n    return null\n  }\n  return <p style={style}>{message}</p>\n}\n\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./Persons\";\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport personService from '../services/persons';\nimport Notification from '../components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [notificationMessage, setNotificationMessage ] = useState(null);\n  const [notificationType, setNotificationType] = useState('success');\n\n  useEffect(() => {\n    personService.getAll()\n      .then(data => {\n        console.log('promise fulfilled', data)\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const personFilter = (person) => {\n    let b = person.name.toLowerCase().includes(filterText.toLowerCase());\n    console.log(b);\n    return b;\n  };\n\n  const handleFilterTextChange = (event) => {\n    setFilterText(event.target.value);\n  };\n\n  const hideNotification = () => {\n    setNotificationMessage(null);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber }\n    if (persons.find((i) => i.name === newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      personService.addPerson(newPerson)\n        .then(data => setPersons(persons.concat(data)));\n      setNotificationType('success');\n      setNotificationMessage(`Added ${newName}`);\n      setTimeout(hideNotification,2000);\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setFilterText(\"\");\n    }\n  };\n\n  const deletePerson = (person) => {\n    const personToDelete = person.id\n    console.log('delete person ', personToDelete)\n    if (window.confirm(`delete ${person.name}?`)) {\n      personService.deletePerson(personToDelete)\n        .then(\n          setPersons(persons.filter(person => person.id !== personToDelete))\n        )\n        .catch(error => {\n          setNotificationType('alert');\n          setNotificationMessage(`Information of ${person.name} has already been removed from server`);\n          setTimeout(hideNotification,2000);\n        })\n    }\n  }\n\n  const personsToShow = persons.filter(personFilter);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType} />\n      <Filter value={filterText} onchange={handleFilterTextChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        onnamechange={handleNewNameChange}\n        onnumberchange={handleNewNumberChange}\n        onsubmit={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handlePersonDelete={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}